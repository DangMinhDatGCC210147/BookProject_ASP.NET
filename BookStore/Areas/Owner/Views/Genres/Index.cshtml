@model List<BusinessObjects.Genre>
@{
    ViewData["Title"] = "Genre";
}
<main id="main" class="main">
    <section class="section">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="card-title">Genres table</h5>
                            @* <form class="form-inline" method="POST"> *@
                                <div class="form-group">
                                    <div class="input-group">
                                        <input type="text" class="form-control" id="searchInput" placeholder="Search..." aria-label="Search">
                                        <div class="input-group-append">
                                            <button type="button" class="btn btn-success">Search</button>
                                        </div>
                                    </div>
                                </div>
                            @* </form> *@
                            <button type="button" class="btn btn-info" data-toggle="modal" data-target="#categoryModal">Add New Genre</button>
                        </div>
                        <!-- Modal -->
                        <div class="modal fade" id="categoryModal" tabindex="-1" role="dialog" aria-labelledby="categoryModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="categoryModalLabel">Add New Genre</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <form method="post" asp-action="CreateGenre" asp-controller="Genre" id="myForm">
                                            @Html.AntiForgeryToken()
                                            <div class="form-group">
                                                <label for="categoryName">Genre Name</label>
                                                <input type="text" class="form-control" id="categoryName" placeholder="Enter category name">
                                            </div>
                                            <div class="form-group">
                                                <label for="categoryDescription">Description</label>
                                                <textarea class="form-control" id="categoryDescription" rows="3" placeholder="Enter category description"></textarea>
                                            </div>
@*                                             <div class="form-group">
                                                <label for="categoryAddDate">Add Date</label>
                                                <input type="date" class="form-control" id="categoryAddDate">
                                            </div> *@
                                            @* <button type="submit" class="btn btn-primary">Submit</button> *@
                                            <div class="modal-footer">
                                                <button type="submit" class="btn btn-primary">Submit</button>
                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                            </div>
                                        </form>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <!-- Small tables -->
                        <table class="table table-sm table-hover" id="genreList" name="genreList">
                            <thead>
                                <tr>
                                    <th scope="col">ID</th>
                                    <th scope="col">Genres Name</th>
                                    <th scope="col" class="w-50">Description</th>
                                    <th scope="col">Added Date</th>
                                    <th scope="col">Approval Status</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <div id="noResultsMessage" class="alert alert-warning" style="display: none;">
                                    No available values found.
                                </div>
                                @foreach(var genre in Model)
                                {
                                    <tr>
                                        <th scope="row">@genre.Id</th>
                                        <td>@genre.Name</td>
                                        <td>@genre.Description</td>
                                        <td>@genre.AddDate.ToString("yyyy-MM-dd")</td>
                                        <td>
                                            @{
                                                string approvalStatusText;
                                                switch (((int)genre.ApprovalStatus))
                                                {
                                                    case 0:
                                                        approvalStatusText = "Pending";
                                                        break;
                                                    case 1:
                                                        approvalStatusText = "Accepted";
                                                        break;
                                                    case 2:
                                                        approvalStatusText = "Rejected";
                                                        break;
                                                    default:
                                                        approvalStatusText = "Unknown";
                                                        break;
                                                }
                                            }
                                            @approvalStatusText
                                        </td>

                                        <td>
                                            <div class="flex-column align-items-center">
                                                <button type="button" class="btn btn-danger" onclick="deleteGenre(@genre.Id) ">Delete</button>
                                                <button type="button" class="btn btn-warning">Edit</button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <!-- End small tables -->

                    </div>
                </div>

            </div>
        </div>
    </section>

</main><!-- End #main -->
@section Scripts{
    <script>
        // Add
        $(document).ready(function () {
            $('#myForm').submit(function (e) {
                e.preventDefault();

                // Get the anti-forgery token value from the hidden input field
                var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

                // Get the value from the "Name" and "Description" input fields
                var Name = $('#categoryName').val();
                var Description = $('#categoryDescription').val();
                var AddDate = new Date().toISOString();
                var ApprovalStatus = 0;
                // Create a JSON data object to send to the API
                var data = {
                    Name: Name,
                    Description: Description,
                    AddDate: AddDate,
                    ApprovalStatus: ApprovalStatus
                };

                // Include the anti-forgery token in the request headers
                var headers = {};
                headers['__RequestVerificationToken'] = antiForgeryToken;
                // Use AJAX to send data to the API
                console.log(data)
                $.ajax({
                    type: 'POST',
                    url: 'https://localhost:7269/api/Genres',
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    headers: headers,
                    success: function (response) {
                        // Handle the response from the API
                        $('#categoryModal').modal('hide');
                        Swal.fire({
                            icon: 'success',
                            title: 'Your work has been saved',
                            showConfirmButton: false,
                            timer: 1500
                        });

                        // Clear input
                        $('#categoryName').val('');
                        $('#categoryDescription').val('');

                        refreshGenreList();
                    },
                    error: function (error) {
                        // Handle errors (if any)
                        console.error('Error:', error);
                        alert('An error occurred while sending data.');
                    }
                });
            });
        });</script>
    <script src="~/js/js-admin/genre.js"></script>
<script src="~/js/js-admin/main.js"></script>
}

