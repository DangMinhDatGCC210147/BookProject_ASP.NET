    @model List<BusinessObjects.Genre>
    @{
        ViewData["Title"] = "Genre";
    }
    <main id="main" class="main">
        <section class="section">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="card-title">Genres table</h5>
                                @* <form class="form-inline" method="POST"> *@
                                    <div class="form-group">
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="searchInput" placeholder="Search..." aria-label="Search">
                                            <div class="input-group-append">
                                                <button type="button" class="btn btn-success">Search</button>
                                            </div>
                                        </div>
                                    </div>
                            <button onclick="exportToExcel()" class="btn btn-secondary">Export Excel</button>
                                @* </form> *@
                                <button type="button" class="btn btn-info" data-toggle="modal" data-target="#genreModal">Add New Genre</button>
                            </div>
                            <!-- Modal -->
                            <div class="modal fade" id="genreModal" tabindex="-1" role="dialog" aria-labelledby="categoryModalLabel" aria-hidden="true">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="categoryModalLabel">Genre Genre</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <form method="post" id="myForm">
                                                <input type="hidden" id="genreId">
                                                <div class="form-group">
                                                    <label for="genreName">Genre Name</label>
                                                    <input type="text" class="form-control" id="genreName" placeholder="Enter genre name">
                                                </div>
                                                <div class="form-group">
                                                    <label for="genreDescription">Description</label>
                                                    <textarea class="form-control" id="genreDescription" rows="3" placeholder="Enter genre description"></textarea>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="submit" class="btn btn-primary">Submit</button>
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                                </div>
                                            </form>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <!-- Small tables -->
                            <table class="table table-sm table-hover" id="genreTable" name="genreTable">
                                <thead>
                                    <tr>
                                        <th scope="col">ID</th>
                                        <th scope="col">Genres Name</th>
                                        <th scope="col" class="w-50">Description</th>
                                        <th scope="col">Added Date</th>
                                        <th scope="col">Approval Status</th>
                                        <th scope="col">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="genreList">
                                    <div id="noResultsMessage" class="alert alert-warning" style="display: none;">
                                        No available values found.
                                    </div>
                                    @foreach(var genre in Model)
                                    {
                                        <tr id="row_@genre.Id">
                                            <th scope="row">@genre.Id</th>
                                            <td>@genre.Name</td>
                                            <td>@genre.Description</td>
                                            <td>@genre.AddDate.ToString("yyyy-MM-dd")</td>
                                            <td>
                                                @{
                                                    string approvalStatusText;
                                                    switch (((int)genre.ApprovalStatus))
                                                    {
                                                        case 0:
                                                            approvalStatusText = "Pending";
                                                            break;
                                                        case 1:
                                                            approvalStatusText = "Accepted";
                                                            break;
                                                        case 2:
                                                            approvalStatusText = "Rejected";
                                                            break;
                                                        default:
                                                            approvalStatusText = "Unknown";
                                                            break;
                                                    }
                                                }
                                                @approvalStatusText
                                            </td>

                                            <td>
                                                <div class="flex-column align-items-center">
                                                    <button type="button" class="btn btn-danger" onclick="deleteGenre(@genre.Id) ">Delete</button>
                                                    <button type="button" class="btn btn-warning edit-genre" data-toggle="modal" data-target="#genreModal" onclick="handleEditButton(@genre.Id)">Edit</button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <!-- End small tables -->
                        </div>
                    </div>

                </div>
            </div>
        </section>

    </main><!-- End #main -->
    @section Scripts{
    <script>
        function exportToExcel() {
            Swal.fire({
                title: 'Export Excel',
                text: 'Are you sure you want to export data to Excel?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, export it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: apiUrl + '/api/Genres/export',
                        type: 'GET',
                        xhrFields: {
                            responseType: 'blob'
                        },
                        success: function (data) {
                            var a = document.createElement('a');
                            var url = window.URL.createObjectURL(data);
                            a.href = url;
                            a.download = 'Genres.xlsx';
                            document.body.appendChild(a);
                            a.click();
                            window.URL.revokeObjectURL(url);
                            document.body.removeChild(a);
                        },
                        error: function (error) {
                            console.log('Error:', error);
                        }
                    });
                }
            });
        }
    </script>
        <script src="~/js/js-owner/genre.js"></script>
        <script src="~/js/js-admin/main.js"></script>
    }

